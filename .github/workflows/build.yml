# This is a basic workflow to help you get started with Actions

name: Sample Build File

# Controls when the workflow will run
on:
  workflow_dispatch:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Sample Run a multi-line script
        run: |
          echo Add other actions to build,
          helm

      # - name: PING - Dispatch initiating repository event
      #   if: github.event.action != 'pong'
      #   run: |
      #     curl -X POST https://api.github.com/repos/jrsaravanan/sample-dp/dispatches \
      #     -H 'Accept: application/vnd.github.everest-preview+json' \
      #     -u ${{ secrets.A_TOKEN }} \
      #     --data '{"event_type": "ping", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'

      - name: Emit repository_dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          # You should create a personal access token and store it in your repository
          token: ${{ secrets.A_TOKEN }}
          repository: jrsaravanan/sample-dp
          event-type: sample_push
          client-payload: '{"ref": "${{ github.ref }}", "action": "${{ github.sha }}", "repository": "{{ $GITHUB_REPOSITORY }}"}'

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/dev-${{ steps.date.outputs.date }}',
              sha: context.sha
            })

  test:
      runs-on: ubuntu-latest
      steps:
      - name: Run a one-line script
        run: echo Hello, world Test!
